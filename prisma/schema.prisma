// prisma/schema.prisma

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id               String          @id @default(uuid())
    nickname         String?
    email            String          @unique
    username         String          @unique
    password         String
    age              Int?
    gender           String?
    location         String?
    showAge          Boolean         @default(true)
    showGender       Boolean         @default(true)
    showLocation     Boolean         @default(true)
    keywords         Keyword[]
    topKeywords      TopKeyword[]
    icebreakers      Icebreaker[]
    sentRequests     FriendRequest[] @relation("Sender")
    receivedRequests FriendRequest[] @relation("Receiver")
    sentMessages     Message[]       @relation("Sender")
    receivedMessages Message[]       @relation("Receiver")
}

model Keyword {
    id          String @id @default(uuid())
    word        String
    description String
    userId      String
    user        User   @relation(fields: [userId], references: [id])
}

model TopKeyword {
    id          String @id @default(uuid())
    word        String
    description String
    rank        Int
    userId      String
    user        User   @relation(fields: [userId], references: [id])

    @@unique([userId, rank])
}

model Icebreaker {
    id       String @id @default(uuid())
    question String
    userId   String
    user     User   @relation(fields: [userId], references: [id])
}

model FriendRequest {
    id         String   @id @default(uuid())
    senderId   String
    receiverId String
    status     String // "pending", "accepted", "rejected"
    createdAt  DateTime @default(now())
    sender     User     @relation("Sender", fields: [senderId], references: [id])
    receiver   User     @relation("Receiver", fields: [receiverId], references: [id])
}

model Message {
    id         String   @id @default(uuid())
    content    String
    senderId   String
    receiverId String
    createdAt  DateTime @default(now())
    sender     User     @relation("Sender", fields: [senderId], references: [id])
    receiver   User     @relation("Receiver", fields: [receiverId], references: [id])
}
